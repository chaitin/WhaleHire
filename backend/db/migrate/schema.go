// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "last_active_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// AdminLoginHistoriesColumns holds the columns for the "admin_login_histories" table.
	AdminLoginHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "ip", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "isp", Type: field.TypeString, Nullable: true},
		{Name: "asn", Type: field.TypeString, Nullable: true},
		{Name: "client_version", Type: field.TypeString, Nullable: true},
		{Name: "device", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "admin_id", Type: field.TypeUUID, Nullable: true},
	}
	// AdminLoginHistoriesTable holds the schema information for the "admin_login_histories" table.
	AdminLoginHistoriesTable = &schema.Table{
		Name:       "admin_login_histories",
		Columns:    AdminLoginHistoriesColumns,
		PrimaryKey: []*schema.Column{AdminLoginHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_login_histories_admins_login_histories",
				Columns:    []*schema.Column{AdminLoginHistoriesColumns[10]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "admin_id", Type: field.TypeUUID},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:       "admin_roles",
		Columns:    AdminRolesColumns,
		PrimaryKey: []*schema.Column{AdminRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_roles_admins_admin",
				Columns:    []*schema.Column{AdminRolesColumns[1]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "admin_roles_roles_role",
				Columns:    []*schema.Column{AdminRolesColumns[2]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "adminrole_role_id_admin_id",
				Unique:  true,
				Columns: []*schema.Column{AdminRolesColumns[2], AdminRolesColumns[1]},
			},
		},
	}
	// AttachmentsColumns holds the columns for the "attachments" table.
	AttachmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "message_id", Type: field.TypeUUID},
	}
	// AttachmentsTable holds the schema information for the "attachments" table.
	AttachmentsTable = &schema.Table{
		Name:       "attachments",
		Columns:    AttachmentsColumns,
		PrimaryKey: []*schema.Column{AttachmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attachments_messages_attachments",
				Columns:    []*schema.Column{AttachmentsColumns[7]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// AuditLogsColumns holds the columns for the "audit_logs" table.
	AuditLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "operator_type", Type: field.TypeString},
		{Name: "operator_id", Type: field.TypeUUID, Nullable: true},
		{Name: "operator_name", Type: field.TypeString, Nullable: true},
		{Name: "operation_type", Type: field.TypeString},
		{Name: "resource_type", Type: field.TypeString},
		{Name: "resource_id", Type: field.TypeString, Nullable: true},
		{Name: "resource_name", Type: field.TypeString, Nullable: true},
		{Name: "method", Type: field.TypeString},
		{Name: "path", Type: field.TypeString},
		{Name: "query_params", Type: field.TypeString, Nullable: true},
		{Name: "request_body", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "user_agent", Type: field.TypeString, Nullable: true},
		{Name: "status_code", Type: field.TypeInt},
		{Name: "status", Type: field.TypeString, Default: "success"},
		{Name: "response_body", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "ip", Type: field.TypeString},
		{Name: "country", Type: field.TypeString, Nullable: true},
		{Name: "province", Type: field.TypeString, Nullable: true},
		{Name: "city", Type: field.TypeString, Nullable: true},
		{Name: "isp", Type: field.TypeString, Nullable: true},
		{Name: "session_id", Type: field.TypeString, Nullable: true},
		{Name: "trace_id", Type: field.TypeString, Nullable: true},
		{Name: "business_data", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "changes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "duration_ms", Type: field.TypeInt64, Nullable: true},
	}
	// AuditLogsTable holds the schema information for the "audit_logs" table.
	AuditLogsTable = &schema.Table{
		Name:       "audit_logs",
		Columns:    AuditLogsColumns,
		PrimaryKey: []*schema.Column{AuditLogsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "auditlog_operator_type_operator_id",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[2], AuditLogsColumns[3]},
			},
			{
				Name:    "auditlog_operator_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[2], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_operation_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[5], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_resource_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[6], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_resource_type_resource_id",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[6], AuditLogsColumns[7]},
			},
			{
				Name:    "auditlog_status_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[15], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_status_code_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[14], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_ip_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[18], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_session_id",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[23]},
			},
			{
				Name:    "auditlog_trace_id",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[24]},
			},
			{
				Name:    "auditlog_operator_type_operation_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[2], AuditLogsColumns[5], AuditLogsColumns[28]},
			},
			{
				Name:    "auditlog_resource_type_operation_type_created_at",
				Unique:  false,
				Columns: []*schema.Column{AuditLogsColumns[6], AuditLogsColumns[5], AuditLogsColumns[28]},
			},
		},
	}
	// ConversationsColumns holds the columns for the "conversations" table.
	ConversationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "agent_name", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ConversationsTable holds the schema information for the "conversations" table.
	ConversationsTable = &schema.Table{
		Name:       "conversations",
		Columns:    ConversationsColumns,
		PrimaryKey: []*schema.Column{ConversationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "conversations_users_conversations",
				Columns:    []*schema.Column{ConversationsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DepartmentColumns holds the columns for the "department" table.
	DepartmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// DepartmentTable holds the schema information for the "department" table.
	DepartmentTable = &schema.Table{
		Name:       "department",
		Columns:    DepartmentColumns,
		PrimaryKey: []*schema.Column{DepartmentColumns[0]},
	}
	// JobEducationRequirementColumns holds the columns for the "job_education_requirement" table.
	JobEducationRequirementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "education_type", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobEducationRequirementTable holds the schema information for the "job_education_requirement" table.
	JobEducationRequirementTable = &schema.Table{
		Name:       "job_education_requirement",
		Columns:    JobEducationRequirementColumns,
		PrimaryKey: []*schema.Column{JobEducationRequirementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_education_requirement_job_position_education_requirements",
				Columns:    []*schema.Column{JobEducationRequirementColumns[5]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobExperienceRequirementColumns holds the columns for the "job_experience_requirement" table.
	JobExperienceRequirementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "experience_type", Type: field.TypeString, Nullable: true},
		{Name: "min_years", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "ideal_years", Type: field.TypeInt, Nullable: true, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobExperienceRequirementTable holds the schema information for the "job_experience_requirement" table.
	JobExperienceRequirementTable = &schema.Table{
		Name:       "job_experience_requirement",
		Columns:    JobExperienceRequirementColumns,
		PrimaryKey: []*schema.Column{JobExperienceRequirementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_experience_requirement_job_position_experience_requirements",
				Columns:    []*schema.Column{JobExperienceRequirementColumns[7]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobIndustryRequirementColumns holds the columns for the "job_industry_requirement" table.
	JobIndustryRequirementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "industry", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "company_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobIndustryRequirementTable holds the schema information for the "job_industry_requirement" table.
	JobIndustryRequirementTable = &schema.Table{
		Name:       "job_industry_requirement",
		Columns:    JobIndustryRequirementColumns,
		PrimaryKey: []*schema.Column{JobIndustryRequirementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_industry_requirement_job_position_industry_requirements",
				Columns:    []*schema.Column{JobIndustryRequirementColumns[6]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobPositionColumns holds the columns for the "job_position" table.
	JobPositionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "status", Type: field.TypeString, Default: "draft"},
		{Name: "work_type", Type: field.TypeString, Nullable: true},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "salary_min", Type: field.TypeFloat64, Nullable: true},
		{Name: "salary_max", Type: field.TypeFloat64, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "department_id", Type: field.TypeUUID},
		{Name: "created_by", Type: field.TypeUUID, Nullable: true},
	}
	// JobPositionTable holds the schema information for the "job_position" table.
	JobPositionTable = &schema.Table{
		Name:       "job_position",
		Columns:    JobPositionColumns,
		PrimaryKey: []*schema.Column{JobPositionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_position_department_positions",
				Columns:    []*schema.Column{JobPositionColumns[11]},
				RefColumns: []*schema.Column{DepartmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "job_position_users_created_positions",
				Columns:    []*schema.Column{JobPositionColumns[12]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// JobResponsibilityColumns holds the columns for the "job_responsibility" table.
	JobResponsibilityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "responsibility", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobResponsibilityTable holds the schema information for the "job_responsibility" table.
	JobResponsibilityTable = &schema.Table{
		Name:       "job_responsibility",
		Columns:    JobResponsibilityColumns,
		PrimaryKey: []*schema.Column{JobResponsibilityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_responsibility_job_position_responsibilities",
				Columns:    []*schema.Column{JobResponsibilityColumns[5]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobSkillColumns holds the columns for the "job_skill" table.
	JobSkillColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
		{Name: "skill_id", Type: field.TypeUUID},
	}
	// JobSkillTable holds the schema information for the "job_skill" table.
	JobSkillTable = &schema.Table{
		Name:       "job_skill",
		Columns:    JobSkillColumns,
		PrimaryKey: []*schema.Column{JobSkillColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_skill_job_position_skills",
				Columns:    []*schema.Column{JobSkillColumns[5]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "job_skill_job_skillmeta_job_links",
				Columns:    []*schema.Column{JobSkillColumns[6]},
				RefColumns: []*schema.Column{JobSkillmetaColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "jobskill_job_id_skill_id_type",
				Unique:  true,
				Columns: []*schema.Column{JobSkillColumns[5], JobSkillColumns[6], JobSkillColumns[2]},
			},
		},
	}
	// JobSkillmetaColumns holds the columns for the "job_skillmeta" table.
	JobSkillmetaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// JobSkillmetaTable holds the schema information for the "job_skillmeta" table.
	JobSkillmetaTable = &schema.Table{
		Name:       "job_skillmeta",
		Columns:    JobSkillmetaColumns,
		PrimaryKey: []*schema.Column{JobSkillmetaColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "jobskillmeta_name",
				Unique:  true,
				Columns: []*schema.Column{JobSkillmetaColumns[2]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "role", Type: field.TypeString},
		{Name: "agent_name", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString, Default: "text"},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "media_url", Type: field.TypeString, Nullable: true},
		{Name: "sequence", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "conversation_id", Type: field.TypeUUID},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_conversations_messages",
				Columns:    []*schema.Column{MessagesColumns[10]},
				RefColumns: []*schema.Column{ConversationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// NotificationEventsColumns holds the columns for the "notification_events" table.
	NotificationEventsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "event_type", Type: field.TypeString},
		{Name: "channel", Type: field.TypeString, Default: "dingtalk"},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "payload", Type: field.TypeJSON},
		{Name: "template_id", Type: field.TypeString},
		{Name: "target", Type: field.TypeString},
		{Name: "retry_count", Type: field.TypeInt, Default: 0},
		{Name: "max_retry", Type: field.TypeInt, Default: 3},
		{Name: "timeout", Type: field.TypeInt, Default: 300},
		{Name: "last_error", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "trace_id", Type: field.TypeString, Nullable: true},
		{Name: "scheduled_at", Type: field.TypeTime, Nullable: true},
		{Name: "delivered_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// NotificationEventsTable holds the schema information for the "notification_events" table.
	NotificationEventsTable = &schema.Table{
		Name:       "notification_events",
		Columns:    NotificationEventsColumns,
		PrimaryKey: []*schema.Column{NotificationEventsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "notificationevent_event_type",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[2]},
			},
			{
				Name:    "notificationevent_channel",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[3]},
			},
			{
				Name:    "notificationevent_status",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[4]},
			},
			{
				Name:    "notificationevent_trace_id",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[12]},
			},
			{
				Name:    "notificationevent_scheduled_at",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[13]},
			},
			{
				Name:    "notificationevent_created_at",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[15]},
			},
			{
				Name:    "notificationevent_status_scheduled_at",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[4], NotificationEventsColumns[13]},
			},
			{
				Name:    "notificationevent_event_type_status",
				Unique:  false,
				Columns: []*schema.Column{NotificationEventsColumns[2], NotificationEventsColumns[4]},
			},
		},
	}
	// NotificationSettingsColumns holds the columns for the "notification_settings" table.
	NotificationSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString},
		{Name: "channel", Type: field.TypeString},
		{Name: "enabled", Type: field.TypeBool, Default: true},
		{Name: "dingtalk_config", Type: field.TypeJSON, Nullable: true},
		{Name: "max_retry", Type: field.TypeInt, Default: 3},
		{Name: "timeout", Type: field.TypeInt, Default: 300},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// NotificationSettingsTable holds the schema information for the "notification_settings" table.
	NotificationSettingsTable = &schema.Table{
		Name:       "notification_settings",
		Columns:    NotificationSettingsColumns,
		PrimaryKey: []*schema.Column{NotificationSettingsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "notificationsetting_channel",
				Unique:  false,
				Columns: []*schema.Column{NotificationSettingsColumns[3]},
			},
			{
				Name:    "notificationsetting_enabled",
				Unique:  false,
				Columns: []*schema.Column{NotificationSettingsColumns[4]},
			},
			{
				Name:    "notificationsetting_channel_enabled",
				Unique:  false,
				Columns: []*schema.Column{NotificationSettingsColumns[3], NotificationSettingsColumns[4]},
			},
			{
				Name:    "notificationsetting_name_channel",
				Unique:  true,
				Columns: []*schema.Column{NotificationSettingsColumns[2], NotificationSettingsColumns[3]},
			},
		},
	}
	// ResumesColumns holds the columns for the "resumes" table.
	ResumesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "current_city", Type: field.TypeString, Nullable: true},
		{Name: "highest_education", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "years_experience", Type: field.TypeFloat64, Nullable: true},
		{Name: "resume_file_url", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "parsed_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "uploader_id", Type: field.TypeUUID},
	}
	// ResumesTable holds the schema information for the "resumes" table.
	ResumesTable = &schema.Table{
		Name:       "resumes",
		Columns:    ResumesColumns,
		PrimaryKey: []*schema.Column{ResumesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resumes_users_resumes",
				Columns:    []*schema.Column{ResumesColumns[16]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeDocumentParsesColumns holds the columns for the "resume_document_parses" table.
	ResumeDocumentParsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "file_id", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "file_type", Type: field.TypeString, Nullable: true},
		{Name: "filename", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "upload_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeDocumentParsesTable holds the schema information for the "resume_document_parses" table.
	ResumeDocumentParsesTable = &schema.Table{
		Name:       "resume_document_parses",
		Columns:    ResumeDocumentParsesColumns,
		PrimaryKey: []*schema.Column{ResumeDocumentParsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_document_parses_resumes_document_parse",
				Columns:    []*schema.Column{ResumeDocumentParsesColumns[12]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeEducationsColumns holds the columns for the "resume_educations" table.
	ResumeEducationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "school", Type: field.TypeString, Nullable: true},
		{Name: "degree", Type: field.TypeString, Nullable: true},
		{Name: "major", Type: field.TypeString, Nullable: true},
		{Name: "university_type", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeEducationsTable holds the schema information for the "resume_educations" table.
	ResumeEducationsTable = &schema.Table{
		Name:       "resume_educations",
		Columns:    ResumeEducationsColumns,
		PrimaryKey: []*schema.Column{ResumeEducationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_educations_resumes_educations",
				Columns:    []*schema.Column{ResumeEducationsColumns[10]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeExperiencesColumns holds the columns for the "resume_experiences" table.
	ResumeExperiencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "position", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeExperiencesTable holds the schema information for the "resume_experiences" table.
	ResumeExperiencesTable = &schema.Table{
		Name:       "resume_experiences",
		Columns:    ResumeExperiencesColumns,
		PrimaryKey: []*schema.Column{ResumeExperiencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_experiences_resumes_experiences",
				Columns:    []*schema.Column{ResumeExperiencesColumns[10]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeJobApplicationsColumns holds the columns for the "resume_job_applications" table.
	ResumeJobApplicationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "applied"},
		{Name: "source", Type: field.TypeString, Nullable: true},
		{Name: "notes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "applied_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_position_id", Type: field.TypeUUID},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeJobApplicationsTable holds the schema information for the "resume_job_applications" table.
	ResumeJobApplicationsTable = &schema.Table{
		Name:       "resume_job_applications",
		Columns:    ResumeJobApplicationsColumns,
		PrimaryKey: []*schema.Column{ResumeJobApplicationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_job_applications_job_position_resume_applications",
				Columns:    []*schema.Column{ResumeJobApplicationsColumns[8]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "resume_job_applications_resumes_job_applications",
				Columns:    []*schema.Column{ResumeJobApplicationsColumns[9]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "resumejobapplication_resume_id_job_position_id",
				Unique:  true,
				Columns: []*schema.Column{ResumeJobApplicationsColumns[9], ResumeJobApplicationsColumns[8]},
			},
			{
				Name:    "resumejobapplication_resume_id",
				Unique:  false,
				Columns: []*schema.Column{ResumeJobApplicationsColumns[9]},
			},
			{
				Name:    "resumejobapplication_job_position_id",
				Unique:  false,
				Columns: []*schema.Column{ResumeJobApplicationsColumns[8]},
			},
			{
				Name:    "resumejobapplication_status",
				Unique:  false,
				Columns: []*schema.Column{ResumeJobApplicationsColumns[2]},
			},
			{
				Name:    "resumejobapplication_applied_at",
				Unique:  false,
				Columns: []*schema.Column{ResumeJobApplicationsColumns[5]},
			},
		},
	}
	// ResumeLogsColumns holds the columns for the "resume_logs" table.
	ResumeLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "action", Type: field.TypeString},
		{Name: "message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeLogsTable holds the schema information for the "resume_logs" table.
	ResumeLogsTable = &schema.Table{
		Name:       "resume_logs",
		Columns:    ResumeLogsColumns,
		PrimaryKey: []*schema.Column{ResumeLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_logs_resumes_logs",
				Columns:    []*schema.Column{ResumeLogsColumns[6]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeMailboxCursorsColumns holds the columns for the "resume_mailbox_cursors" table.
	ResumeMailboxCursorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "protocol_cursor", Type: field.TypeString, Size: 2147483647},
		{Name: "last_message_id", Type: field.TypeString, Nullable: true, Size: 512},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "mailbox_id", Type: field.TypeUUID},
	}
	// ResumeMailboxCursorsTable holds the schema information for the "resume_mailbox_cursors" table.
	ResumeMailboxCursorsTable = &schema.Table{
		Name:       "resume_mailbox_cursors",
		Columns:    ResumeMailboxCursorsColumns,
		PrimaryKey: []*schema.Column{ResumeMailboxCursorsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_mailbox_cursors_resume_mailbox_settings_cursors",
				Columns:    []*schema.Column{ResumeMailboxCursorsColumns[6]},
				RefColumns: []*schema.Column{ResumeMailboxSettingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "resumemailboxcursor_mailbox_id",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxCursorsColumns[6]},
			},
			{
				Name:    "resumemailboxcursor_updated_at",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxCursorsColumns[5]},
			},
		},
	}
	// ResumeMailboxSettingsColumns holds the columns for the "resume_mailbox_settings" table.
	ResumeMailboxSettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 256},
		{Name: "email_address", Type: field.TypeString, Size: 256},
		{Name: "protocol", Type: field.TypeString, Size: 32},
		{Name: "host", Type: field.TypeString, Size: 256},
		{Name: "port", Type: field.TypeInt},
		{Name: "use_ssl", Type: field.TypeBool, Default: true},
		{Name: "folder", Type: field.TypeString, Nullable: true, Size: 256},
		{Name: "auth_type", Type: field.TypeString, Size: 32, Default: "password"},
		{Name: "encrypted_credential", Type: field.TypeJSON},
		{Name: "job_profile_ids", Type: field.TypeJSON, Nullable: true},
		{Name: "sync_interval_minutes", Type: field.TypeInt, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "enabled"},
		{Name: "last_synced_at", Type: field.TypeTime, Nullable: true},
		{Name: "last_error", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "retry_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "uploader_id", Type: field.TypeUUID},
	}
	// ResumeMailboxSettingsTable holds the schema information for the "resume_mailbox_settings" table.
	ResumeMailboxSettingsTable = &schema.Table{
		Name:       "resume_mailbox_settings",
		Columns:    ResumeMailboxSettingsColumns,
		PrimaryKey: []*schema.Column{ResumeMailboxSettingsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_mailbox_settings_users_uploader",
				Columns:    []*schema.Column{ResumeMailboxSettingsColumns[19]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "resumemailboxsetting_protocol_email_address",
				Unique:  true,
				Columns: []*schema.Column{ResumeMailboxSettingsColumns[4], ResumeMailboxSettingsColumns[3]},
			},
			{
				Name:    "resumemailboxsetting_status",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxSettingsColumns[13]},
			},
			{
				Name:    "resumemailboxsetting_uploader_id",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxSettingsColumns[19]},
			},
			{
				Name:    "resumemailboxsetting_last_synced_at",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxSettingsColumns[14]},
			},
		},
	}
	// ResumeMailboxStatisticsColumns holds the columns for the "resume_mailbox_statistics" table.
	ResumeMailboxStatisticsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "date", Type: field.TypeTime},
		{Name: "synced_emails", Type: field.TypeInt, Default: 0},
		{Name: "parsed_resumes", Type: field.TypeInt, Default: 0},
		{Name: "failed_resumes", Type: field.TypeInt, Default: 0},
		{Name: "skipped_attachments", Type: field.TypeInt, Default: 0},
		{Name: "last_sync_duration_ms", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "mailbox_id", Type: field.TypeUUID},
	}
	// ResumeMailboxStatisticsTable holds the schema information for the "resume_mailbox_statistics" table.
	ResumeMailboxStatisticsTable = &schema.Table{
		Name:       "resume_mailbox_statistics",
		Columns:    ResumeMailboxStatisticsColumns,
		PrimaryKey: []*schema.Column{ResumeMailboxStatisticsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_mailbox_statistics_resume_mailbox_settings_statistics",
				Columns:    []*schema.Column{ResumeMailboxStatisticsColumns[10]},
				RefColumns: []*schema.Column{ResumeMailboxSettingsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "resumemailboxstatistic_mailbox_id_date",
				Unique:  true,
				Columns: []*schema.Column{ResumeMailboxStatisticsColumns[10], ResumeMailboxStatisticsColumns[2]},
			},
			{
				Name:    "resumemailboxstatistic_mailbox_id",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxStatisticsColumns[10]},
			},
			{
				Name:    "resumemailboxstatistic_date",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxStatisticsColumns[2]},
			},
			{
				Name:    "resumemailboxstatistic_updated_at",
				Unique:  false,
				Columns: []*schema.Column{ResumeMailboxStatisticsColumns[9]},
			},
		},
	}
	// ResumeProjectsColumns holds the columns for the "resume_projects" table.
	ResumeProjectsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "role", Type: field.TypeString, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "responsibilities", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "achievements", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "technologies", Type: field.TypeString, Nullable: true},
		{Name: "project_url", Type: field.TypeString, Nullable: true},
		{Name: "project_type", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeProjectsTable holds the schema information for the "resume_projects" table.
	ResumeProjectsTable = &schema.Table{
		Name:       "resume_projects",
		Columns:    ResumeProjectsColumns,
		PrimaryKey: []*schema.Column{ResumeProjectsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_projects_resumes_projects",
				Columns:    []*schema.Column{ResumeProjectsColumns[15]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeSkillsColumns holds the columns for the "resume_skills" table.
	ResumeSkillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "skill_name", Type: field.TypeString, Nullable: true},
		{Name: "level", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeSkillsTable holds the schema information for the "resume_skills" table.
	ResumeSkillsTable = &schema.Table{
		Name:       "resume_skills",
		Columns:    ResumeSkillsColumns,
		PrimaryKey: []*schema.Column{ResumeSkillsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_skills_resumes_skills",
				Columns:    []*schema.Column{ResumeSkillsColumns[7]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// ScreeningNodeRunsColumns holds the columns for the "screening_node_runs" table.
	ScreeningNodeRunsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "node_key", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "attempt_no", Type: field.TypeInt, Default: 1},
		{Name: "trace_id", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "agent_version", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "model_name", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "model_provider", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "llm_params", Type: field.TypeJSON, Nullable: true},
		{Name: "input_payload", Type: field.TypeJSON, Nullable: true},
		{Name: "output_payload", Type: field.TypeJSON, Nullable: true},
		{Name: "error_message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "tokens_input", Type: field.TypeInt64, Nullable: true},
		{Name: "tokens_output", Type: field.TypeInt64, Nullable: true},
		{Name: "total_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "duration_ms", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "task_id", Type: field.TypeUUID},
		{Name: "task_resume_id", Type: field.TypeUUID},
	}
	// ScreeningNodeRunsTable holds the schema information for the "screening_node_runs" table.
	ScreeningNodeRunsTable = &schema.Table{
		Name:       "screening_node_runs",
		Columns:    ScreeningNodeRunsColumns,
		PrimaryKey: []*schema.Column{ScreeningNodeRunsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "screening_node_runs_screening_tasks_node_runs",
				Columns:    []*schema.Column{ScreeningNodeRunsColumns[21]},
				RefColumns: []*schema.Column{ScreeningTasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "screening_node_runs_screening_task_resumes_node_runs",
				Columns:    []*schema.Column{ScreeningNodeRunsColumns[22]},
				RefColumns: []*schema.Column{ScreeningTaskResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "screeningnoderun_task_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[21]},
			},
			{
				Name:    "screeningnoderun_task_resume_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[22]},
			},
			{
				Name:    "screeningnoderun_node_key",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[2]},
			},
			{
				Name:    "screeningnoderun_status",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[3]},
			},
			{
				Name:    "screeningnoderun_created_at",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[19]},
			},
			{
				Name:    "screeningnoderun_task_resume_id_node_key_attempt_no",
				Unique:  true,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[22], ScreeningNodeRunsColumns[2], ScreeningNodeRunsColumns[4]},
			},
			{
				Name:    "screeningnoderun_task_id_node_key",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[21], ScreeningNodeRunsColumns[2]},
			},
			{
				Name:    "screeningnoderun_node_key_status",
				Unique:  false,
				Columns: []*schema.Column{ScreeningNodeRunsColumns[2], ScreeningNodeRunsColumns[3]},
			},
		},
	}
	// ScreeningResultsColumns holds the columns for the "screening_results" table.
	ScreeningResultsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "overall_score", Type: field.TypeFloat64},
		{Name: "match_level", Type: field.TypeEnum, Nullable: true, Enums: []string{"excellent", "good", "fair", "poor"}},
		{Name: "dimension_scores", Type: field.TypeJSON, Nullable: true},
		{Name: "skill_detail", Type: field.TypeJSON, Nullable: true},
		{Name: "responsibility_detail", Type: field.TypeJSON, Nullable: true},
		{Name: "experience_detail", Type: field.TypeJSON, Nullable: true},
		{Name: "education_detail", Type: field.TypeJSON, Nullable: true},
		{Name: "industry_detail", Type: field.TypeJSON, Nullable: true},
		{Name: "basic_detail", Type: field.TypeJSON, Nullable: true},
		{Name: "recommendations", Type: field.TypeJSON, Nullable: true},
		{Name: "trace_id", Type: field.TypeString, Nullable: true, Size: 100},
		{Name: "runtime_metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "sub_agent_versions", Type: field.TypeJSON, Nullable: true},
		{Name: "matched_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_position_id", Type: field.TypeUUID},
		{Name: "resume_id", Type: field.TypeUUID},
		{Name: "task_id", Type: field.TypeUUID},
	}
	// ScreeningResultsTable holds the schema information for the "screening_results" table.
	ScreeningResultsTable = &schema.Table{
		Name:       "screening_results",
		Columns:    ScreeningResultsColumns,
		PrimaryKey: []*schema.Column{ScreeningResultsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "screening_results_job_position_screening_results",
				Columns:    []*schema.Column{ScreeningResultsColumns[18]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "screening_results_resumes_screening_results",
				Columns:    []*schema.Column{ScreeningResultsColumns[19]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "screening_results_screening_tasks_results",
				Columns:    []*schema.Column{ScreeningResultsColumns[20]},
				RefColumns: []*schema.Column{ScreeningTasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "screeningresult_task_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningResultsColumns[20]},
			},
			{
				Name:    "screeningresult_job_position_id_resume_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningResultsColumns[18], ScreeningResultsColumns[19]},
			},
			{
				Name:    "screeningresult_overall_score",
				Unique:  false,
				Columns: []*schema.Column{ScreeningResultsColumns[2]},
				Annotation: &entsql.IndexAnnotation{
					Desc: true,
				},
			},
			{
				Name:    "screeningresult_task_id_resume_id",
				Unique:  true,
				Columns: []*schema.Column{ScreeningResultsColumns[20], ScreeningResultsColumns[19]},
			},
			{
				Name:    "screeningresult_match_level",
				Unique:  false,
				Columns: []*schema.Column{ScreeningResultsColumns[3]},
			},
			{
				Name:    "screeningresult_matched_at",
				Unique:  false,
				Columns: []*schema.Column{ScreeningResultsColumns[15]},
			},
		},
	}
	// ScreeningRunMetricsColumns holds the columns for the "screening_run_metrics" table.
	ScreeningRunMetricsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "avg_score", Type: field.TypeFloat64, Nullable: true},
		{Name: "histogram", Type: field.TypeJSON, Nullable: true},
		{Name: "tokens_input", Type: field.TypeInt64, Nullable: true},
		{Name: "tokens_output", Type: field.TypeInt64, Nullable: true},
		{Name: "total_cost", Type: field.TypeFloat64, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "task_id", Type: field.TypeUUID},
	}
	// ScreeningRunMetricsTable holds the schema information for the "screening_run_metrics" table.
	ScreeningRunMetricsTable = &schema.Table{
		Name:       "screening_run_metrics",
		Columns:    ScreeningRunMetricsColumns,
		PrimaryKey: []*schema.Column{ScreeningRunMetricsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "screening_run_metrics_screening_tasks_run_metrics",
				Columns:    []*schema.Column{ScreeningRunMetricsColumns[9]},
				RefColumns: []*schema.Column{ScreeningTasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "screeningrunmetric_task_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningRunMetricsColumns[9]},
			},
			{
				Name:    "screeningrunmetric_avg_score",
				Unique:  false,
				Columns: []*schema.Column{ScreeningRunMetricsColumns[2]},
			},
			{
				Name:    "screeningrunmetric_created_at",
				Unique:  false,
				Columns: []*schema.Column{ScreeningRunMetricsColumns[7]},
			},
		},
	}
	// ScreeningTasksColumns holds the columns for the "screening_tasks" table.
	ScreeningTasksColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "dimension_weights", Type: field.TypeJSON, Nullable: true},
		{Name: "llm_config", Type: field.TypeJSON, Nullable: true},
		{Name: "notes", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "resume_total", Type: field.TypeInt, Default: 0},
		{Name: "resume_processed", Type: field.TypeInt, Default: 0},
		{Name: "resume_succeeded", Type: field.TypeInt, Default: 0},
		{Name: "resume_failed", Type: field.TypeInt, Default: 0},
		{Name: "agent_version", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "started_at", Type: field.TypeTime, Nullable: true},
		{Name: "finished_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_position_id", Type: field.TypeUUID},
		{Name: "created_by", Type: field.TypeUUID},
	}
	// ScreeningTasksTable holds the schema information for the "screening_tasks" table.
	ScreeningTasksTable = &schema.Table{
		Name:       "screening_tasks",
		Columns:    ScreeningTasksColumns,
		PrimaryKey: []*schema.Column{ScreeningTasksColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "screening_tasks_job_position_screening_tasks",
				Columns:    []*schema.Column{ScreeningTasksColumns[15]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "screening_tasks_users_created_screening_tasks",
				Columns:    []*schema.Column{ScreeningTasksColumns[16]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "screeningtask_job_position_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTasksColumns[15]},
			},
			{
				Name:    "screeningtask_status",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTasksColumns[2]},
			},
			{
				Name:    "screeningtask_created_by",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTasksColumns[16]},
			},
			{
				Name:    "screeningtask_created_at",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTasksColumns[13]},
			},
		},
	}
	// ScreeningTaskResumesColumns holds the columns for the "screening_task_resumes" table.
	ScreeningTaskResumesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "error_message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "ranking", Type: field.TypeInt, Nullable: true},
		{Name: "score", Type: field.TypeFloat64, Nullable: true},
		{Name: "processed_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
		{Name: "task_id", Type: field.TypeUUID},
	}
	// ScreeningTaskResumesTable holds the schema information for the "screening_task_resumes" table.
	ScreeningTaskResumesTable = &schema.Table{
		Name:       "screening_task_resumes",
		Columns:    ScreeningTaskResumesColumns,
		PrimaryKey: []*schema.Column{ScreeningTaskResumesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "screening_task_resumes_resumes_screening_task_resumes",
				Columns:    []*schema.Column{ScreeningTaskResumesColumns[9]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "screening_task_resumes_screening_tasks_task_resumes",
				Columns:    []*schema.Column{ScreeningTaskResumesColumns[10]},
				RefColumns: []*schema.Column{ScreeningTasksColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "screeningtaskresume_task_id",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTaskResumesColumns[10]},
			},
			{
				Name:    "screeningtaskresume_status",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTaskResumesColumns[2]},
			},
			{
				Name:    "screeningtaskresume_score",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTaskResumesColumns[5]},
				Annotation: &entsql.IndexAnnotation{
					Desc: true,
				},
			},
			{
				Name:    "screeningtaskresume_task_id_resume_id",
				Unique:  true,
				Columns: []*schema.Column{ScreeningTaskResumesColumns[10], ScreeningTaskResumesColumns[9]},
			},
			{
				Name:    "screeningtaskresume_task_id_ranking",
				Unique:  false,
				Columns: []*schema.Column{ScreeningTaskResumesColumns[10], ScreeningTaskResumesColumns[4]},
			},
		},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "enable_sso", Type: field.TypeBool, Default: false},
		{Name: "force_two_factor_auth", Type: field.TypeBool, Default: false},
		{Name: "disable_password_login", Type: field.TypeBool, Default: false},
		{Name: "enable_auto_login", Type: field.TypeBool, Default: false},
		{Name: "dingtalk_oauth", Type: field.TypeJSON, Nullable: true},
		{Name: "custom_oauth", Type: field.TypeJSON, Nullable: true},
		{Name: "base_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "platform", Type: field.TypeString, Default: "email"},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserIdentitiesColumns holds the columns for the "user_identities" table.
	UserIdentitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "platform", Type: field.TypeString, Default: "email"},
		{Name: "identity_id", Type: field.TypeString},
		{Name: "union_id", Type: field.TypeString, Nullable: true},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// UserIdentitiesTable holds the schema information for the "user_identities" table.
	UserIdentitiesTable = &schema.Table{
		Name:       "user_identities",
		Columns:    UserIdentitiesColumns,
		PrimaryKey: []*schema.Column{UserIdentitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_identities_users_identities",
				Columns:    []*schema.Column{UserIdentitiesColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserLoginHistoriesColumns holds the columns for the "user_login_histories" table.
	UserLoginHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "ip", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "isp", Type: field.TypeString, Nullable: true},
		{Name: "asn", Type: field.TypeString, Nullable: true},
		{Name: "client_version", Type: field.TypeString, Nullable: true},
		{Name: "os_type", Type: field.TypeString, Nullable: true},
		{Name: "os_release", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "client_id", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// UserLoginHistoriesTable holds the schema information for the "user_login_histories" table.
	UserLoginHistoriesTable = &schema.Table{
		Name:       "user_login_histories",
		Columns:    UserLoginHistoriesColumns,
		PrimaryKey: []*schema.Column{UserLoginHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_login_histories_users_login_histories",
				Columns:    []*schema.Column{UserLoginHistoriesColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		AdminLoginHistoriesTable,
		AdminRolesTable,
		AttachmentsTable,
		AuditLogsTable,
		ConversationsTable,
		DepartmentTable,
		JobEducationRequirementTable,
		JobExperienceRequirementTable,
		JobIndustryRequirementTable,
		JobPositionTable,
		JobResponsibilityTable,
		JobSkillTable,
		JobSkillmetaTable,
		MessagesTable,
		NotificationEventsTable,
		NotificationSettingsTable,
		ResumesTable,
		ResumeDocumentParsesTable,
		ResumeEducationsTable,
		ResumeExperiencesTable,
		ResumeJobApplicationsTable,
		ResumeLogsTable,
		ResumeMailboxCursorsTable,
		ResumeMailboxSettingsTable,
		ResumeMailboxStatisticsTable,
		ResumeProjectsTable,
		ResumeSkillsTable,
		RolesTable,
		ScreeningNodeRunsTable,
		ScreeningResultsTable,
		ScreeningRunMetricsTable,
		ScreeningTasksTable,
		ScreeningTaskResumesTable,
		SettingsTable,
		UsersTable,
		UserIdentitiesTable,
		UserLoginHistoriesTable,
	}
)

func init() {
	AdminsTable.Annotation = &entsql.Annotation{
		Table: "admins",
	}
	AdminLoginHistoriesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminLoginHistoriesTable.Annotation = &entsql.Annotation{
		Table: "admin_login_histories",
	}
	AdminRolesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[1].RefTable = RolesTable
	AdminRolesTable.Annotation = &entsql.Annotation{
		Table: "admin_roles",
	}
	AttachmentsTable.ForeignKeys[0].RefTable = MessagesTable
	AttachmentsTable.Annotation = &entsql.Annotation{
		Table: "attachments",
	}
	AuditLogsTable.Annotation = &entsql.Annotation{
		Table: "audit_logs",
	}
	ConversationsTable.ForeignKeys[0].RefTable = UsersTable
	ConversationsTable.Annotation = &entsql.Annotation{
		Table: "conversations",
	}
	DepartmentTable.Annotation = &entsql.Annotation{
		Table: "department",
	}
	JobEducationRequirementTable.ForeignKeys[0].RefTable = JobPositionTable
	JobEducationRequirementTable.Annotation = &entsql.Annotation{
		Table: "job_education_requirement",
	}
	JobExperienceRequirementTable.ForeignKeys[0].RefTable = JobPositionTable
	JobExperienceRequirementTable.Annotation = &entsql.Annotation{
		Table: "job_experience_requirement",
	}
	JobIndustryRequirementTable.ForeignKeys[0].RefTable = JobPositionTable
	JobIndustryRequirementTable.Annotation = &entsql.Annotation{
		Table: "job_industry_requirement",
	}
	JobPositionTable.ForeignKeys[0].RefTable = DepartmentTable
	JobPositionTable.ForeignKeys[1].RefTable = UsersTable
	JobPositionTable.Annotation = &entsql.Annotation{
		Table: "job_position",
	}
	JobResponsibilityTable.ForeignKeys[0].RefTable = JobPositionTable
	JobResponsibilityTable.Annotation = &entsql.Annotation{
		Table: "job_responsibility",
	}
	JobSkillTable.ForeignKeys[0].RefTable = JobPositionTable
	JobSkillTable.ForeignKeys[1].RefTable = JobSkillmetaTable
	JobSkillTable.Annotation = &entsql.Annotation{
		Table: "job_skill",
	}
	JobSkillmetaTable.Annotation = &entsql.Annotation{
		Table: "job_skillmeta",
	}
	MessagesTable.ForeignKeys[0].RefTable = ConversationsTable
	MessagesTable.Annotation = &entsql.Annotation{
		Table: "messages",
	}
	NotificationEventsTable.Annotation = &entsql.Annotation{
		Table: "notification_events",
	}
	NotificationSettingsTable.Annotation = &entsql.Annotation{
		Table: "notification_settings",
	}
	ResumesTable.ForeignKeys[0].RefTable = UsersTable
	ResumesTable.Annotation = &entsql.Annotation{
		Table: "resumes",
	}
	ResumeDocumentParsesTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeDocumentParsesTable.Annotation = &entsql.Annotation{
		Table: "resume_document_parses",
	}
	ResumeEducationsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeEducationsTable.Annotation = &entsql.Annotation{
		Table: "resume_educations",
	}
	ResumeExperiencesTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeExperiencesTable.Annotation = &entsql.Annotation{
		Table: "resume_experiences",
	}
	ResumeJobApplicationsTable.ForeignKeys[0].RefTable = JobPositionTable
	ResumeJobApplicationsTable.ForeignKeys[1].RefTable = ResumesTable
	ResumeJobApplicationsTable.Annotation = &entsql.Annotation{
		Table: "resume_job_applications",
	}
	ResumeLogsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeLogsTable.Annotation = &entsql.Annotation{
		Table: "resume_logs",
	}
	ResumeMailboxCursorsTable.ForeignKeys[0].RefTable = ResumeMailboxSettingsTable
	ResumeMailboxCursorsTable.Annotation = &entsql.Annotation{
		Table: "resume_mailbox_cursors",
	}
	ResumeMailboxSettingsTable.ForeignKeys[0].RefTable = UsersTable
	ResumeMailboxSettingsTable.Annotation = &entsql.Annotation{
		Table: "resume_mailbox_settings",
	}
	ResumeMailboxStatisticsTable.ForeignKeys[0].RefTable = ResumeMailboxSettingsTable
	ResumeMailboxStatisticsTable.Annotation = &entsql.Annotation{
		Table: "resume_mailbox_statistics",
	}
	ResumeProjectsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeProjectsTable.Annotation = &entsql.Annotation{
		Table: "resume_projects",
	}
	ResumeSkillsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeSkillsTable.Annotation = &entsql.Annotation{
		Table: "resume_skills",
	}
	RolesTable.Annotation = &entsql.Annotation{
		Table: "roles",
	}
	ScreeningNodeRunsTable.ForeignKeys[0].RefTable = ScreeningTasksTable
	ScreeningNodeRunsTable.ForeignKeys[1].RefTable = ScreeningTaskResumesTable
	ScreeningNodeRunsTable.Annotation = &entsql.Annotation{
		Table: "screening_node_runs",
	}
	ScreeningResultsTable.ForeignKeys[0].RefTable = JobPositionTable
	ScreeningResultsTable.ForeignKeys[1].RefTable = ResumesTable
	ScreeningResultsTable.ForeignKeys[2].RefTable = ScreeningTasksTable
	ScreeningResultsTable.Annotation = &entsql.Annotation{
		Table: "screening_results",
	}
	ScreeningRunMetricsTable.ForeignKeys[0].RefTable = ScreeningTasksTable
	ScreeningRunMetricsTable.Annotation = &entsql.Annotation{
		Table: "screening_run_metrics",
	}
	ScreeningTasksTable.ForeignKeys[0].RefTable = JobPositionTable
	ScreeningTasksTable.ForeignKeys[1].RefTable = UsersTable
	ScreeningTasksTable.Annotation = &entsql.Annotation{
		Table: "screening_tasks",
	}
	ScreeningTaskResumesTable.ForeignKeys[0].RefTable = ResumesTable
	ScreeningTaskResumesTable.ForeignKeys[1].RefTable = ScreeningTasksTable
	ScreeningTaskResumesTable.Annotation = &entsql.Annotation{
		Table: "screening_task_resumes",
	}
	SettingsTable.Annotation = &entsql.Annotation{
		Table: "settings",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	UserIdentitiesTable.ForeignKeys[0].RefTable = UsersTable
	UserIdentitiesTable.Annotation = &entsql.Annotation{
		Table: "user_identities",
	}
	UserLoginHistoriesTable.ForeignKeys[0].RefTable = UsersTable
	UserLoginHistoriesTable.Annotation = &entsql.Annotation{
		Table: "user_login_histories",
	}
}
