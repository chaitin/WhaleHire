// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminsColumns holds the columns for the "admins" table.
	AdminsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "status", Type: field.TypeString},
		{Name: "last_active_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// AdminsTable holds the schema information for the "admins" table.
	AdminsTable = &schema.Table{
		Name:       "admins",
		Columns:    AdminsColumns,
		PrimaryKey: []*schema.Column{AdminsColumns[0]},
	}
	// AdminLoginHistoriesColumns holds the columns for the "admin_login_histories" table.
	AdminLoginHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "ip", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "isp", Type: field.TypeString, Nullable: true},
		{Name: "asn", Type: field.TypeString, Nullable: true},
		{Name: "client_version", Type: field.TypeString, Nullable: true},
		{Name: "device", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "admin_id", Type: field.TypeUUID, Nullable: true},
	}
	// AdminLoginHistoriesTable holds the schema information for the "admin_login_histories" table.
	AdminLoginHistoriesTable = &schema.Table{
		Name:       "admin_login_histories",
		Columns:    AdminLoginHistoriesColumns,
		PrimaryKey: []*schema.Column{AdminLoginHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_login_histories_admins_login_histories",
				Columns:    []*schema.Column{AdminLoginHistoriesColumns[10]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// AdminRolesColumns holds the columns for the "admin_roles" table.
	AdminRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "admin_id", Type: field.TypeUUID},
		{Name: "role_id", Type: field.TypeInt64},
	}
	// AdminRolesTable holds the schema information for the "admin_roles" table.
	AdminRolesTable = &schema.Table{
		Name:       "admin_roles",
		Columns:    AdminRolesColumns,
		PrimaryKey: []*schema.Column{AdminRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "admin_roles_admins_admin",
				Columns:    []*schema.Column{AdminRolesColumns[1]},
				RefColumns: []*schema.Column{AdminsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "admin_roles_roles_role",
				Columns:    []*schema.Column{AdminRolesColumns[2]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "adminrole_role_id_admin_id",
				Unique:  true,
				Columns: []*schema.Column{AdminRolesColumns[2], AdminRolesColumns[1]},
			},
		},
	}
	// AttachmentsColumns holds the columns for the "attachments" table.
	AttachmentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeString},
		{Name: "url", Type: field.TypeString},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "message_id", Type: field.TypeUUID},
	}
	// AttachmentsTable holds the schema information for the "attachments" table.
	AttachmentsTable = &schema.Table{
		Name:       "attachments",
		Columns:    AttachmentsColumns,
		PrimaryKey: []*schema.Column{AttachmentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "attachments_messages_attachments",
				Columns:    []*schema.Column{AttachmentsColumns[7]},
				RefColumns: []*schema.Column{MessagesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ConversationsColumns holds the columns for the "conversations" table.
	ConversationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "title", Type: field.TypeString},
		{Name: "agent_name", Type: field.TypeString, Nullable: true},
		{Name: "metadata", Type: field.TypeJSON, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ConversationsTable holds the schema information for the "conversations" table.
	ConversationsTable = &schema.Table{
		Name:       "conversations",
		Columns:    ConversationsColumns,
		PrimaryKey: []*schema.Column{ConversationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "conversations_users_conversations",
				Columns:    []*schema.Column{ConversationsColumns[8]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// DepartmentColumns holds the columns for the "department" table.
	DepartmentColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "parent_id", Type: field.TypeUUID, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// DepartmentTable holds the schema information for the "department" table.
	DepartmentTable = &schema.Table{
		Name:       "department",
		Columns:    DepartmentColumns,
		PrimaryKey: []*schema.Column{DepartmentColumns[0]},
	}
	// JobEducationRequirementColumns holds the columns for the "job_education_requirement" table.
	JobEducationRequirementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "min_degree", Type: field.TypeString, Size: 50},
		{Name: "weight", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobEducationRequirementTable holds the schema information for the "job_education_requirement" table.
	JobEducationRequirementTable = &schema.Table{
		Name:       "job_education_requirement",
		Columns:    JobEducationRequirementColumns,
		PrimaryKey: []*schema.Column{JobEducationRequirementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_education_requirement_job_position_education_requirements",
				Columns:    []*schema.Column{JobEducationRequirementColumns[6]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobExperienceRequirementColumns holds the columns for the "job_experience_requirement" table.
	JobExperienceRequirementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "min_years", Type: field.TypeInt, Default: 0},
		{Name: "ideal_years", Type: field.TypeInt, Default: 0},
		{Name: "weight", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobExperienceRequirementTable holds the schema information for the "job_experience_requirement" table.
	JobExperienceRequirementTable = &schema.Table{
		Name:       "job_experience_requirement",
		Columns:    JobExperienceRequirementColumns,
		PrimaryKey: []*schema.Column{JobExperienceRequirementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_experience_requirement_job_position_experience_requirements",
				Columns:    []*schema.Column{JobExperienceRequirementColumns[7]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobIndustryRequirementColumns holds the columns for the "job_industry_requirement" table.
	JobIndustryRequirementColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "industry", Type: field.TypeString, Size: 100},
		{Name: "company_name", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "weight", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobIndustryRequirementTable holds the schema information for the "job_industry_requirement" table.
	JobIndustryRequirementTable = &schema.Table{
		Name:       "job_industry_requirement",
		Columns:    JobIndustryRequirementColumns,
		PrimaryKey: []*schema.Column{JobIndustryRequirementColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_industry_requirement_job_position_industry_requirements",
				Columns:    []*schema.Column{JobIndustryRequirementColumns[7]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobPositionColumns holds the columns for the "job_position" table.
	JobPositionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "status", Type: field.TypeString, Default: "draft"},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 200},
		{Name: "salary_min", Type: field.TypeFloat64, Nullable: true},
		{Name: "salary_max", Type: field.TypeFloat64, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "department_id", Type: field.TypeUUID},
		{Name: "created_by", Type: field.TypeUUID, Nullable: true},
	}
	// JobPositionTable holds the schema information for the "job_position" table.
	JobPositionTable = &schema.Table{
		Name:       "job_position",
		Columns:    JobPositionColumns,
		PrimaryKey: []*schema.Column{JobPositionColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_position_department_positions",
				Columns:    []*schema.Column{JobPositionColumns[10]},
				RefColumns: []*schema.Column{DepartmentColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "job_position_users_created_positions",
				Columns:    []*schema.Column{JobPositionColumns[11]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// JobResponsibilityColumns holds the columns for the "job_responsibility" table.
	JobResponsibilityColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "responsibility", Type: field.TypeString},
		{Name: "sort_order", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
	}
	// JobResponsibilityTable holds the schema information for the "job_responsibility" table.
	JobResponsibilityTable = &schema.Table{
		Name:       "job_responsibility",
		Columns:    JobResponsibilityColumns,
		PrimaryKey: []*schema.Column{JobResponsibilityColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_responsibility_job_position_responsibilities",
				Columns:    []*schema.Column{JobResponsibilityColumns[6]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// JobSkillColumns holds the columns for the "job_skill" table.
	JobSkillColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"required", "bonus"}},
		{Name: "weight", Type: field.TypeInt},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "job_id", Type: field.TypeUUID},
		{Name: "skill_id", Type: field.TypeUUID},
	}
	// JobSkillTable holds the schema information for the "job_skill" table.
	JobSkillTable = &schema.Table{
		Name:       "job_skill",
		Columns:    JobSkillColumns,
		PrimaryKey: []*schema.Column{JobSkillColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "job_skill_job_position_skills",
				Columns:    []*schema.Column{JobSkillColumns[6]},
				RefColumns: []*schema.Column{JobPositionColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "job_skill_job_skillmeta_job_links",
				Columns:    []*schema.Column{JobSkillColumns[7]},
				RefColumns: []*schema.Column{JobSkillmetaColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "jobskill_job_id_skill_id_type",
				Unique:  true,
				Columns: []*schema.Column{JobSkillColumns[6], JobSkillColumns[7], JobSkillColumns[2]},
			},
		},
	}
	// JobSkillmetaColumns holds the columns for the "job_skillmeta" table.
	JobSkillmetaColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 100},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "created_at", Type: field.TypeTime},
	}
	// JobSkillmetaTable holds the schema information for the "job_skillmeta" table.
	JobSkillmetaTable = &schema.Table{
		Name:       "job_skillmeta",
		Columns:    JobSkillmetaColumns,
		PrimaryKey: []*schema.Column{JobSkillmetaColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "jobskillmeta_name",
				Unique:  true,
				Columns: []*schema.Column{JobSkillmetaColumns[2]},
			},
		},
	}
	// MessagesColumns holds the columns for the "messages" table.
	MessagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "role", Type: field.TypeString},
		{Name: "agent_name", Type: field.TypeString, Nullable: true},
		{Name: "type", Type: field.TypeString, Default: "text"},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "media_url", Type: field.TypeString, Nullable: true},
		{Name: "sequence", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "conversation_id", Type: field.TypeUUID},
	}
	// MessagesTable holds the schema information for the "messages" table.
	MessagesTable = &schema.Table{
		Name:       "messages",
		Columns:    MessagesColumns,
		PrimaryKey: []*schema.Column{MessagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "messages_conversations_messages",
				Columns:    []*schema.Column{MessagesColumns[10]},
				RefColumns: []*schema.Column{ConversationsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumesColumns holds the columns for the "resumes" table.
	ResumesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "name", Type: field.TypeString, Nullable: true},
		{Name: "gender", Type: field.TypeString, Nullable: true},
		{Name: "birthday", Type: field.TypeTime, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "phone", Type: field.TypeString, Nullable: true},
		{Name: "current_city", Type: field.TypeString, Nullable: true},
		{Name: "highest_education", Type: field.TypeString, Nullable: true, Size: 50},
		{Name: "years_experience", Type: field.TypeFloat64, Nullable: true},
		{Name: "resume_file_url", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "parsed_at", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID},
	}
	// ResumesTable holds the schema information for the "resumes" table.
	ResumesTable = &schema.Table{
		Name:       "resumes",
		Columns:    ResumesColumns,
		PrimaryKey: []*schema.Column{ResumesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resumes_users_resumes",
				Columns:    []*schema.Column{ResumesColumns[16]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeDocumentParsesColumns holds the columns for the "resume_document_parses" table.
	ResumeDocumentParsesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "file_id", Type: field.TypeString, Nullable: true},
		{Name: "content", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "file_type", Type: field.TypeString, Nullable: true},
		{Name: "filename", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "upload_at", Type: field.TypeTime, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "error_message", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeDocumentParsesTable holds the schema information for the "resume_document_parses" table.
	ResumeDocumentParsesTable = &schema.Table{
		Name:       "resume_document_parses",
		Columns:    ResumeDocumentParsesColumns,
		PrimaryKey: []*schema.Column{ResumeDocumentParsesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_document_parses_resumes_document_parse",
				Columns:    []*schema.Column{ResumeDocumentParsesColumns[12]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeEducationsColumns holds the columns for the "resume_educations" table.
	ResumeEducationsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "school", Type: field.TypeString, Nullable: true},
		{Name: "degree", Type: field.TypeString, Nullable: true},
		{Name: "major", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeEducationsTable holds the schema information for the "resume_educations" table.
	ResumeEducationsTable = &schema.Table{
		Name:       "resume_educations",
		Columns:    ResumeEducationsColumns,
		PrimaryKey: []*schema.Column{ResumeEducationsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_educations_resumes_educations",
				Columns:    []*schema.Column{ResumeEducationsColumns[9]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeExperiencesColumns holds the columns for the "resume_experiences" table.
	ResumeExperiencesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "company", Type: field.TypeString, Nullable: true},
		{Name: "position", Type: field.TypeString, Nullable: true},
		{Name: "title", Type: field.TypeString, Nullable: true},
		{Name: "start_date", Type: field.TypeTime, Nullable: true},
		{Name: "end_date", Type: field.TypeTime, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeExperiencesTable holds the schema information for the "resume_experiences" table.
	ResumeExperiencesTable = &schema.Table{
		Name:       "resume_experiences",
		Columns:    ResumeExperiencesColumns,
		PrimaryKey: []*schema.Column{ResumeExperiencesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_experiences_resumes_experiences",
				Columns:    []*schema.Column{ResumeExperiencesColumns[10]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeLogsColumns holds the columns for the "resume_logs" table.
	ResumeLogsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "action", Type: field.TypeString},
		{Name: "message", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeLogsTable holds the schema information for the "resume_logs" table.
	ResumeLogsTable = &schema.Table{
		Name:       "resume_logs",
		Columns:    ResumeLogsColumns,
		PrimaryKey: []*schema.Column{ResumeLogsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_logs_resumes_logs",
				Columns:    []*schema.Column{ResumeLogsColumns[6]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// ResumeSkillsColumns holds the columns for the "resume_skills" table.
	ResumeSkillsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "skill_name", Type: field.TypeString, Nullable: true},
		{Name: "level", Type: field.TypeString, Nullable: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "resume_id", Type: field.TypeUUID},
	}
	// ResumeSkillsTable holds the schema information for the "resume_skills" table.
	ResumeSkillsTable = &schema.Table{
		Name:       "resume_skills",
		Columns:    ResumeSkillsColumns,
		PrimaryKey: []*schema.Column{ResumeSkillsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "resume_skills_resumes_skills",
				Columns:    []*schema.Column{ResumeSkillsColumns[7]},
				RefColumns: []*schema.Column{ResumesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "enable_sso", Type: field.TypeBool, Default: false},
		{Name: "force_two_factor_auth", Type: field.TypeBool, Default: false},
		{Name: "disable_password_login", Type: field.TypeBool, Default: false},
		{Name: "enable_auto_login", Type: field.TypeBool, Default: false},
		{Name: "dingtalk_oauth", Type: field.TypeJSON, Nullable: true},
		{Name: "custom_oauth", Type: field.TypeJSON, Nullable: true},
		{Name: "base_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "username", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "platform", Type: field.TypeString, Default: "email"},
		{Name: "status", Type: field.TypeString, Default: "active"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserIdentitiesColumns holds the columns for the "user_identities" table.
	UserIdentitiesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "deleted_at", Type: field.TypeTime, Nullable: true},
		{Name: "platform", Type: field.TypeString, Default: "email"},
		{Name: "identity_id", Type: field.TypeString},
		{Name: "union_id", Type: field.TypeString, Nullable: true},
		{Name: "nickname", Type: field.TypeString, Nullable: true},
		{Name: "email", Type: field.TypeString, Nullable: true},
		{Name: "avatar_url", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// UserIdentitiesTable holds the schema information for the "user_identities" table.
	UserIdentitiesTable = &schema.Table{
		Name:       "user_identities",
		Columns:    UserIdentitiesColumns,
		PrimaryKey: []*schema.Column{UserIdentitiesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_identities_users_identities",
				Columns:    []*schema.Column{UserIdentitiesColumns[9]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UserLoginHistoriesColumns holds the columns for the "user_login_histories" table.
	UserLoginHistoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "ip", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "province", Type: field.TypeString},
		{Name: "city", Type: field.TypeString},
		{Name: "isp", Type: field.TypeString, Nullable: true},
		{Name: "asn", Type: field.TypeString, Nullable: true},
		{Name: "client_version", Type: field.TypeString, Nullable: true},
		{Name: "os_type", Type: field.TypeString, Nullable: true},
		{Name: "os_release", Type: field.TypeString, Nullable: true},
		{Name: "hostname", Type: field.TypeString, Nullable: true},
		{Name: "client_id", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_id", Type: field.TypeUUID, Nullable: true},
	}
	// UserLoginHistoriesTable holds the schema information for the "user_login_histories" table.
	UserLoginHistoriesTable = &schema.Table{
		Name:       "user_login_histories",
		Columns:    UserLoginHistoriesColumns,
		PrimaryKey: []*schema.Column{UserLoginHistoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_login_histories_users_login_histories",
				Columns:    []*schema.Column{UserLoginHistoriesColumns[13]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminsTable,
		AdminLoginHistoriesTable,
		AdminRolesTable,
		AttachmentsTable,
		ConversationsTable,
		DepartmentTable,
		JobEducationRequirementTable,
		JobExperienceRequirementTable,
		JobIndustryRequirementTable,
		JobPositionTable,
		JobResponsibilityTable,
		JobSkillTable,
		JobSkillmetaTable,
		MessagesTable,
		ResumesTable,
		ResumeDocumentParsesTable,
		ResumeEducationsTable,
		ResumeExperiencesTable,
		ResumeLogsTable,
		ResumeSkillsTable,
		RolesTable,
		SettingsTable,
		UsersTable,
		UserIdentitiesTable,
		UserLoginHistoriesTable,
	}
)

func init() {
	AdminsTable.Annotation = &entsql.Annotation{
		Table: "admins",
	}
	AdminLoginHistoriesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminLoginHistoriesTable.Annotation = &entsql.Annotation{
		Table: "admin_login_histories",
	}
	AdminRolesTable.ForeignKeys[0].RefTable = AdminsTable
	AdminRolesTable.ForeignKeys[1].RefTable = RolesTable
	AdminRolesTable.Annotation = &entsql.Annotation{
		Table: "admin_roles",
	}
	AttachmentsTable.ForeignKeys[0].RefTable = MessagesTable
	AttachmentsTable.Annotation = &entsql.Annotation{
		Table: "attachments",
	}
	ConversationsTable.ForeignKeys[0].RefTable = UsersTable
	ConversationsTable.Annotation = &entsql.Annotation{
		Table: "conversations",
	}
	DepartmentTable.Annotation = &entsql.Annotation{
		Table: "department",
	}
	JobEducationRequirementTable.ForeignKeys[0].RefTable = JobPositionTable
	JobEducationRequirementTable.Annotation = &entsql.Annotation{
		Table: "job_education_requirement",
	}
	JobExperienceRequirementTable.ForeignKeys[0].RefTable = JobPositionTable
	JobExperienceRequirementTable.Annotation = &entsql.Annotation{
		Table: "job_experience_requirement",
	}
	JobIndustryRequirementTable.ForeignKeys[0].RefTable = JobPositionTable
	JobIndustryRequirementTable.Annotation = &entsql.Annotation{
		Table: "job_industry_requirement",
	}
	JobPositionTable.ForeignKeys[0].RefTable = DepartmentTable
	JobPositionTable.ForeignKeys[1].RefTable = UsersTable
	JobPositionTable.Annotation = &entsql.Annotation{
		Table: "job_position",
	}
	JobResponsibilityTable.ForeignKeys[0].RefTable = JobPositionTable
	JobResponsibilityTable.Annotation = &entsql.Annotation{
		Table: "job_responsibility",
	}
	JobSkillTable.ForeignKeys[0].RefTable = JobPositionTable
	JobSkillTable.ForeignKeys[1].RefTable = JobSkillmetaTable
	JobSkillTable.Annotation = &entsql.Annotation{
		Table: "job_skill",
	}
	JobSkillmetaTable.Annotation = &entsql.Annotation{
		Table: "job_skillmeta",
	}
	MessagesTable.ForeignKeys[0].RefTable = ConversationsTable
	MessagesTable.Annotation = &entsql.Annotation{
		Table: "messages",
	}
	ResumesTable.ForeignKeys[0].RefTable = UsersTable
	ResumesTable.Annotation = &entsql.Annotation{
		Table: "resumes",
	}
	ResumeDocumentParsesTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeDocumentParsesTable.Annotation = &entsql.Annotation{
		Table: "resume_document_parses",
	}
	ResumeEducationsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeEducationsTable.Annotation = &entsql.Annotation{
		Table: "resume_educations",
	}
	ResumeExperiencesTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeExperiencesTable.Annotation = &entsql.Annotation{
		Table: "resume_experiences",
	}
	ResumeLogsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeLogsTable.Annotation = &entsql.Annotation{
		Table: "resume_logs",
	}
	ResumeSkillsTable.ForeignKeys[0].RefTable = ResumesTable
	ResumeSkillsTable.Annotation = &entsql.Annotation{
		Table: "resume_skills",
	}
	RolesTable.Annotation = &entsql.Annotation{
		Table: "roles",
	}
	SettingsTable.Annotation = &entsql.Annotation{
		Table: "settings",
	}
	UsersTable.Annotation = &entsql.Annotation{
		Table: "users",
	}
	UserIdentitiesTable.ForeignKeys[0].RefTable = UsersTable
	UserIdentitiesTable.Annotation = &entsql.Annotation{
		Table: "user_identities",
	}
	UserLoginHistoriesTable.ForeignKeys[0].RefTable = UsersTable
	UserLoginHistoriesTable.Annotation = &entsql.Annotation{
		Table: "user_login_histories",
	}
}
