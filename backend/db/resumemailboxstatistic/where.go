// Code generated by ent, DO NOT EDIT.

package resumemailboxstatistic

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/chaitin/WhaleHire/backend/db/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldID, id))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldDeletedAt, v))
}

// MailboxID applies equality check predicate on the "mailbox_id" field. It's identical to MailboxIDEQ.
func MailboxID(v uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldMailboxID, v))
}

// Date applies equality check predicate on the "date" field. It's identical to DateEQ.
func Date(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldDate, v))
}

// SyncedEmails applies equality check predicate on the "synced_emails" field. It's identical to SyncedEmailsEQ.
func SyncedEmails(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldSyncedEmails, v))
}

// ParsedResumes applies equality check predicate on the "parsed_resumes" field. It's identical to ParsedResumesEQ.
func ParsedResumes(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldParsedResumes, v))
}

// FailedResumes applies equality check predicate on the "failed_resumes" field. It's identical to FailedResumesEQ.
func FailedResumes(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldFailedResumes, v))
}

// SkippedAttachments applies equality check predicate on the "skipped_attachments" field. It's identical to SkippedAttachmentsEQ.
func SkippedAttachments(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldSkippedAttachments, v))
}

// LastSyncDurationMs applies equality check predicate on the "last_sync_duration_ms" field. It's identical to LastSyncDurationMsEQ.
func LastSyncDurationMs(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldLastSyncDurationMs, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotNull(FieldDeletedAt))
}

// MailboxIDEQ applies the EQ predicate on the "mailbox_id" field.
func MailboxIDEQ(v uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldMailboxID, v))
}

// MailboxIDNEQ applies the NEQ predicate on the "mailbox_id" field.
func MailboxIDNEQ(v uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldMailboxID, v))
}

// MailboxIDIn applies the In predicate on the "mailbox_id" field.
func MailboxIDIn(vs ...uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldMailboxID, vs...))
}

// MailboxIDNotIn applies the NotIn predicate on the "mailbox_id" field.
func MailboxIDNotIn(vs ...uuid.UUID) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldMailboxID, vs...))
}

// DateEQ applies the EQ predicate on the "date" field.
func DateEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldDate, v))
}

// DateNEQ applies the NEQ predicate on the "date" field.
func DateNEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldDate, v))
}

// DateIn applies the In predicate on the "date" field.
func DateIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldDate, vs...))
}

// DateNotIn applies the NotIn predicate on the "date" field.
func DateNotIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldDate, vs...))
}

// DateGT applies the GT predicate on the "date" field.
func DateGT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldDate, v))
}

// DateGTE applies the GTE predicate on the "date" field.
func DateGTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldDate, v))
}

// DateLT applies the LT predicate on the "date" field.
func DateLT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldDate, v))
}

// DateLTE applies the LTE predicate on the "date" field.
func DateLTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldDate, v))
}

// SyncedEmailsEQ applies the EQ predicate on the "synced_emails" field.
func SyncedEmailsEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldSyncedEmails, v))
}

// SyncedEmailsNEQ applies the NEQ predicate on the "synced_emails" field.
func SyncedEmailsNEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldSyncedEmails, v))
}

// SyncedEmailsIn applies the In predicate on the "synced_emails" field.
func SyncedEmailsIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldSyncedEmails, vs...))
}

// SyncedEmailsNotIn applies the NotIn predicate on the "synced_emails" field.
func SyncedEmailsNotIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldSyncedEmails, vs...))
}

// SyncedEmailsGT applies the GT predicate on the "synced_emails" field.
func SyncedEmailsGT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldSyncedEmails, v))
}

// SyncedEmailsGTE applies the GTE predicate on the "synced_emails" field.
func SyncedEmailsGTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldSyncedEmails, v))
}

// SyncedEmailsLT applies the LT predicate on the "synced_emails" field.
func SyncedEmailsLT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldSyncedEmails, v))
}

// SyncedEmailsLTE applies the LTE predicate on the "synced_emails" field.
func SyncedEmailsLTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldSyncedEmails, v))
}

// ParsedResumesEQ applies the EQ predicate on the "parsed_resumes" field.
func ParsedResumesEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldParsedResumes, v))
}

// ParsedResumesNEQ applies the NEQ predicate on the "parsed_resumes" field.
func ParsedResumesNEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldParsedResumes, v))
}

// ParsedResumesIn applies the In predicate on the "parsed_resumes" field.
func ParsedResumesIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldParsedResumes, vs...))
}

// ParsedResumesNotIn applies the NotIn predicate on the "parsed_resumes" field.
func ParsedResumesNotIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldParsedResumes, vs...))
}

// ParsedResumesGT applies the GT predicate on the "parsed_resumes" field.
func ParsedResumesGT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldParsedResumes, v))
}

// ParsedResumesGTE applies the GTE predicate on the "parsed_resumes" field.
func ParsedResumesGTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldParsedResumes, v))
}

// ParsedResumesLT applies the LT predicate on the "parsed_resumes" field.
func ParsedResumesLT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldParsedResumes, v))
}

// ParsedResumesLTE applies the LTE predicate on the "parsed_resumes" field.
func ParsedResumesLTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldParsedResumes, v))
}

// FailedResumesEQ applies the EQ predicate on the "failed_resumes" field.
func FailedResumesEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldFailedResumes, v))
}

// FailedResumesNEQ applies the NEQ predicate on the "failed_resumes" field.
func FailedResumesNEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldFailedResumes, v))
}

// FailedResumesIn applies the In predicate on the "failed_resumes" field.
func FailedResumesIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldFailedResumes, vs...))
}

// FailedResumesNotIn applies the NotIn predicate on the "failed_resumes" field.
func FailedResumesNotIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldFailedResumes, vs...))
}

// FailedResumesGT applies the GT predicate on the "failed_resumes" field.
func FailedResumesGT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldFailedResumes, v))
}

// FailedResumesGTE applies the GTE predicate on the "failed_resumes" field.
func FailedResumesGTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldFailedResumes, v))
}

// FailedResumesLT applies the LT predicate on the "failed_resumes" field.
func FailedResumesLT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldFailedResumes, v))
}

// FailedResumesLTE applies the LTE predicate on the "failed_resumes" field.
func FailedResumesLTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldFailedResumes, v))
}

// SkippedAttachmentsEQ applies the EQ predicate on the "skipped_attachments" field.
func SkippedAttachmentsEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldSkippedAttachments, v))
}

// SkippedAttachmentsNEQ applies the NEQ predicate on the "skipped_attachments" field.
func SkippedAttachmentsNEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldSkippedAttachments, v))
}

// SkippedAttachmentsIn applies the In predicate on the "skipped_attachments" field.
func SkippedAttachmentsIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldSkippedAttachments, vs...))
}

// SkippedAttachmentsNotIn applies the NotIn predicate on the "skipped_attachments" field.
func SkippedAttachmentsNotIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldSkippedAttachments, vs...))
}

// SkippedAttachmentsGT applies the GT predicate on the "skipped_attachments" field.
func SkippedAttachmentsGT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldSkippedAttachments, v))
}

// SkippedAttachmentsGTE applies the GTE predicate on the "skipped_attachments" field.
func SkippedAttachmentsGTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldSkippedAttachments, v))
}

// SkippedAttachmentsLT applies the LT predicate on the "skipped_attachments" field.
func SkippedAttachmentsLT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldSkippedAttachments, v))
}

// SkippedAttachmentsLTE applies the LTE predicate on the "skipped_attachments" field.
func SkippedAttachmentsLTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldSkippedAttachments, v))
}

// LastSyncDurationMsEQ applies the EQ predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldLastSyncDurationMs, v))
}

// LastSyncDurationMsNEQ applies the NEQ predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsNEQ(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldLastSyncDurationMs, v))
}

// LastSyncDurationMsIn applies the In predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldLastSyncDurationMs, vs...))
}

// LastSyncDurationMsNotIn applies the NotIn predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsNotIn(vs ...int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldLastSyncDurationMs, vs...))
}

// LastSyncDurationMsGT applies the GT predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsGT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldLastSyncDurationMs, v))
}

// LastSyncDurationMsGTE applies the GTE predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsGTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldLastSyncDurationMs, v))
}

// LastSyncDurationMsLT applies the LT predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsLT(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldLastSyncDurationMs, v))
}

// LastSyncDurationMsLTE applies the LTE predicate on the "last_sync_duration_ms" field.
func LastSyncDurationMsLTE(v int) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldLastSyncDurationMs, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasMailbox applies the HasEdge predicate on the "mailbox" edge.
func HasMailbox() predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, MailboxTable, MailboxColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasMailboxWith applies the HasEdge predicate on the "mailbox" edge with a given conditions (other predicates).
func HasMailboxWith(preds ...predicate.ResumeMailboxSetting) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(func(s *sql.Selector) {
		step := newMailboxStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ResumeMailboxStatistic) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ResumeMailboxStatistic) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ResumeMailboxStatistic) predicate.ResumeMailboxStatistic {
	return predicate.ResumeMailboxStatistic(sql.NotPredicates(p))
}
