// Code generated by ent, DO NOT EDIT.

package resumemailboxstatistic

import (
	"time"

	"entgo.io/ent"
	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the resumemailboxstatistic type in the database.
	Label = "resume_mailbox_statistic"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldDeletedAt holds the string denoting the deleted_at field in the database.
	FieldDeletedAt = "deleted_at"
	// FieldMailboxID holds the string denoting the mailbox_id field in the database.
	FieldMailboxID = "mailbox_id"
	// FieldDate holds the string denoting the date field in the database.
	FieldDate = "date"
	// FieldSyncedEmails holds the string denoting the synced_emails field in the database.
	FieldSyncedEmails = "synced_emails"
	// FieldParsedResumes holds the string denoting the parsed_resumes field in the database.
	FieldParsedResumes = "parsed_resumes"
	// FieldFailedResumes holds the string denoting the failed_resumes field in the database.
	FieldFailedResumes = "failed_resumes"
	// FieldSkippedAttachments holds the string denoting the skipped_attachments field in the database.
	FieldSkippedAttachments = "skipped_attachments"
	// FieldLastSyncDurationMs holds the string denoting the last_sync_duration_ms field in the database.
	FieldLastSyncDurationMs = "last_sync_duration_ms"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgeMailbox holds the string denoting the mailbox edge name in mutations.
	EdgeMailbox = "mailbox"
	// Table holds the table name of the resumemailboxstatistic in the database.
	Table = "resume_mailbox_statistics"
	// MailboxTable is the table that holds the mailbox relation/edge.
	MailboxTable = "resume_mailbox_statistics"
	// MailboxInverseTable is the table name for the ResumeMailboxSetting entity.
	// It exists in this package in order to avoid circular dependency with the "resumemailboxsetting" package.
	MailboxInverseTable = "resume_mailbox_settings"
	// MailboxColumn is the table column denoting the mailbox relation/edge.
	MailboxColumn = "mailbox_id"
)

// Columns holds all SQL columns for resumemailboxstatistic fields.
var Columns = []string{
	FieldID,
	FieldDeletedAt,
	FieldMailboxID,
	FieldDate,
	FieldSyncedEmails,
	FieldParsedResumes,
	FieldFailedResumes,
	FieldSkippedAttachments,
	FieldLastSyncDurationMs,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/chaitin/WhaleHire/backend/db/runtime"
var (
	Hooks        [1]ent.Hook
	Interceptors [1]ent.Interceptor
	// DefaultSyncedEmails holds the default value on creation for the "synced_emails" field.
	DefaultSyncedEmails int
	// DefaultParsedResumes holds the default value on creation for the "parsed_resumes" field.
	DefaultParsedResumes int
	// DefaultFailedResumes holds the default value on creation for the "failed_resumes" field.
	DefaultFailedResumes int
	// DefaultSkippedAttachments holds the default value on creation for the "skipped_attachments" field.
	DefaultSkippedAttachments int
	// DefaultLastSyncDurationMs holds the default value on creation for the "last_sync_duration_ms" field.
	DefaultLastSyncDurationMs int
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() uuid.UUID
)

// OrderOption defines the ordering options for the ResumeMailboxStatistic queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByDeletedAt orders the results by the deleted_at field.
func ByDeletedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDeletedAt, opts...).ToFunc()
}

// ByMailboxID orders the results by the mailbox_id field.
func ByMailboxID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMailboxID, opts...).ToFunc()
}

// ByDate orders the results by the date field.
func ByDate(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDate, opts...).ToFunc()
}

// BySyncedEmails orders the results by the synced_emails field.
func BySyncedEmails(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSyncedEmails, opts...).ToFunc()
}

// ByParsedResumes orders the results by the parsed_resumes field.
func ByParsedResumes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldParsedResumes, opts...).ToFunc()
}

// ByFailedResumes orders the results by the failed_resumes field.
func ByFailedResumes(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFailedResumes, opts...).ToFunc()
}

// BySkippedAttachments orders the results by the skipped_attachments field.
func BySkippedAttachments(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSkippedAttachments, opts...).ToFunc()
}

// ByLastSyncDurationMs orders the results by the last_sync_duration_ms field.
func ByLastSyncDurationMs(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldLastSyncDurationMs, opts...).ToFunc()
}

// ByCreatedAt orders the results by the created_at field.
func ByCreatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCreatedAt, opts...).ToFunc()
}

// ByUpdatedAt orders the results by the updated_at field.
func ByUpdatedAt(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUpdatedAt, opts...).ToFunc()
}

// ByMailboxField orders the results by mailbox field.
func ByMailboxField(field string, opts ...sql.OrderTermOption) OrderOption {
	return func(s *sql.Selector) {
		sqlgraph.OrderByNeighborTerms(s, newMailboxStep(), sql.OrderByField(field, opts...))
	}
}
func newMailboxStep() *sqlgraph.Step {
	return sqlgraph.NewStep(
		sqlgraph.From(Table, FieldID),
		sqlgraph.To(MailboxInverseTable, FieldID),
		sqlgraph.Edge(sqlgraph.M2O, true, MailboxTable, MailboxColumn),
	)
}
