// Code generated by ent, DO NOT EDIT.

package screeningrunmetric

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"github.com/chaitin/WhaleHire/backend/db/predicate"
	"github.com/google/uuid"
)

// ID filters vertices based on their ID field.
func ID(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldID, id))
}

// DeletedAt applies equality check predicate on the "deleted_at" field. It's identical to DeletedAtEQ.
func DeletedAt(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldDeletedAt, v))
}

// TaskID applies equality check predicate on the "task_id" field. It's identical to TaskIDEQ.
func TaskID(v uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTaskID, v))
}

// AvgScore applies equality check predicate on the "avg_score" field. It's identical to AvgScoreEQ.
func AvgScore(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldAvgScore, v))
}

// TokensInput applies equality check predicate on the "tokens_input" field. It's identical to TokensInputEQ.
func TokensInput(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTokensInput, v))
}

// TokensOutput applies equality check predicate on the "tokens_output" field. It's identical to TokensOutputEQ.
func TokensOutput(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTokensOutput, v))
}

// TotalCost applies equality check predicate on the "total_cost" field. It's identical to TotalCostEQ.
func TotalCost(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTotalCost, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldUpdatedAt, v))
}

// DeletedAtEQ applies the EQ predicate on the "deleted_at" field.
func DeletedAtEQ(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldDeletedAt, v))
}

// DeletedAtNEQ applies the NEQ predicate on the "deleted_at" field.
func DeletedAtNEQ(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldDeletedAt, v))
}

// DeletedAtIn applies the In predicate on the "deleted_at" field.
func DeletedAtIn(vs ...time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldDeletedAt, vs...))
}

// DeletedAtNotIn applies the NotIn predicate on the "deleted_at" field.
func DeletedAtNotIn(vs ...time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldDeletedAt, vs...))
}

// DeletedAtGT applies the GT predicate on the "deleted_at" field.
func DeletedAtGT(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldDeletedAt, v))
}

// DeletedAtGTE applies the GTE predicate on the "deleted_at" field.
func DeletedAtGTE(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldDeletedAt, v))
}

// DeletedAtLT applies the LT predicate on the "deleted_at" field.
func DeletedAtLT(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldDeletedAt, v))
}

// DeletedAtLTE applies the LTE predicate on the "deleted_at" field.
func DeletedAtLTE(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldDeletedAt, v))
}

// DeletedAtIsNil applies the IsNil predicate on the "deleted_at" field.
func DeletedAtIsNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIsNull(FieldDeletedAt))
}

// DeletedAtNotNil applies the NotNil predicate on the "deleted_at" field.
func DeletedAtNotNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotNull(FieldDeletedAt))
}

// TaskIDEQ applies the EQ predicate on the "task_id" field.
func TaskIDEQ(v uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTaskID, v))
}

// TaskIDNEQ applies the NEQ predicate on the "task_id" field.
func TaskIDNEQ(v uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldTaskID, v))
}

// TaskIDIn applies the In predicate on the "task_id" field.
func TaskIDIn(vs ...uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldTaskID, vs...))
}

// TaskIDNotIn applies the NotIn predicate on the "task_id" field.
func TaskIDNotIn(vs ...uuid.UUID) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldTaskID, vs...))
}

// AvgScoreEQ applies the EQ predicate on the "avg_score" field.
func AvgScoreEQ(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldAvgScore, v))
}

// AvgScoreNEQ applies the NEQ predicate on the "avg_score" field.
func AvgScoreNEQ(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldAvgScore, v))
}

// AvgScoreIn applies the In predicate on the "avg_score" field.
func AvgScoreIn(vs ...float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldAvgScore, vs...))
}

// AvgScoreNotIn applies the NotIn predicate on the "avg_score" field.
func AvgScoreNotIn(vs ...float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldAvgScore, vs...))
}

// AvgScoreGT applies the GT predicate on the "avg_score" field.
func AvgScoreGT(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldAvgScore, v))
}

// AvgScoreGTE applies the GTE predicate on the "avg_score" field.
func AvgScoreGTE(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldAvgScore, v))
}

// AvgScoreLT applies the LT predicate on the "avg_score" field.
func AvgScoreLT(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldAvgScore, v))
}

// AvgScoreLTE applies the LTE predicate on the "avg_score" field.
func AvgScoreLTE(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldAvgScore, v))
}

// AvgScoreIsNil applies the IsNil predicate on the "avg_score" field.
func AvgScoreIsNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIsNull(FieldAvgScore))
}

// AvgScoreNotNil applies the NotNil predicate on the "avg_score" field.
func AvgScoreNotNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotNull(FieldAvgScore))
}

// HistogramIsNil applies the IsNil predicate on the "histogram" field.
func HistogramIsNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIsNull(FieldHistogram))
}

// HistogramNotNil applies the NotNil predicate on the "histogram" field.
func HistogramNotNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotNull(FieldHistogram))
}

// TokensInputEQ applies the EQ predicate on the "tokens_input" field.
func TokensInputEQ(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTokensInput, v))
}

// TokensInputNEQ applies the NEQ predicate on the "tokens_input" field.
func TokensInputNEQ(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldTokensInput, v))
}

// TokensInputIn applies the In predicate on the "tokens_input" field.
func TokensInputIn(vs ...int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldTokensInput, vs...))
}

// TokensInputNotIn applies the NotIn predicate on the "tokens_input" field.
func TokensInputNotIn(vs ...int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldTokensInput, vs...))
}

// TokensInputGT applies the GT predicate on the "tokens_input" field.
func TokensInputGT(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldTokensInput, v))
}

// TokensInputGTE applies the GTE predicate on the "tokens_input" field.
func TokensInputGTE(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldTokensInput, v))
}

// TokensInputLT applies the LT predicate on the "tokens_input" field.
func TokensInputLT(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldTokensInput, v))
}

// TokensInputLTE applies the LTE predicate on the "tokens_input" field.
func TokensInputLTE(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldTokensInput, v))
}

// TokensInputIsNil applies the IsNil predicate on the "tokens_input" field.
func TokensInputIsNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIsNull(FieldTokensInput))
}

// TokensInputNotNil applies the NotNil predicate on the "tokens_input" field.
func TokensInputNotNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotNull(FieldTokensInput))
}

// TokensOutputEQ applies the EQ predicate on the "tokens_output" field.
func TokensOutputEQ(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTokensOutput, v))
}

// TokensOutputNEQ applies the NEQ predicate on the "tokens_output" field.
func TokensOutputNEQ(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldTokensOutput, v))
}

// TokensOutputIn applies the In predicate on the "tokens_output" field.
func TokensOutputIn(vs ...int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldTokensOutput, vs...))
}

// TokensOutputNotIn applies the NotIn predicate on the "tokens_output" field.
func TokensOutputNotIn(vs ...int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldTokensOutput, vs...))
}

// TokensOutputGT applies the GT predicate on the "tokens_output" field.
func TokensOutputGT(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldTokensOutput, v))
}

// TokensOutputGTE applies the GTE predicate on the "tokens_output" field.
func TokensOutputGTE(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldTokensOutput, v))
}

// TokensOutputLT applies the LT predicate on the "tokens_output" field.
func TokensOutputLT(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldTokensOutput, v))
}

// TokensOutputLTE applies the LTE predicate on the "tokens_output" field.
func TokensOutputLTE(v int64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldTokensOutput, v))
}

// TokensOutputIsNil applies the IsNil predicate on the "tokens_output" field.
func TokensOutputIsNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIsNull(FieldTokensOutput))
}

// TokensOutputNotNil applies the NotNil predicate on the "tokens_output" field.
func TokensOutputNotNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotNull(FieldTokensOutput))
}

// TotalCostEQ applies the EQ predicate on the "total_cost" field.
func TotalCostEQ(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldTotalCost, v))
}

// TotalCostNEQ applies the NEQ predicate on the "total_cost" field.
func TotalCostNEQ(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldTotalCost, v))
}

// TotalCostIn applies the In predicate on the "total_cost" field.
func TotalCostIn(vs ...float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldTotalCost, vs...))
}

// TotalCostNotIn applies the NotIn predicate on the "total_cost" field.
func TotalCostNotIn(vs ...float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldTotalCost, vs...))
}

// TotalCostGT applies the GT predicate on the "total_cost" field.
func TotalCostGT(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldTotalCost, v))
}

// TotalCostGTE applies the GTE predicate on the "total_cost" field.
func TotalCostGTE(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldTotalCost, v))
}

// TotalCostLT applies the LT predicate on the "total_cost" field.
func TotalCostLT(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldTotalCost, v))
}

// TotalCostLTE applies the LTE predicate on the "total_cost" field.
func TotalCostLTE(v float64) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldTotalCost, v))
}

// TotalCostIsNil applies the IsNil predicate on the "total_cost" field.
func TotalCostIsNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIsNull(FieldTotalCost))
}

// TotalCostNotNil applies the NotNil predicate on the "total_cost" field.
func TotalCostNotNil() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotNull(FieldTotalCost))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasTask applies the HasEdge predicate on the "task" edge.
func HasTask() predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, TaskTable, TaskColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasTaskWith applies the HasEdge predicate on the "task" edge with a given conditions (other predicates).
func HasTaskWith(preds ...predicate.ScreeningTask) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(func(s *sql.Selector) {
		step := newTaskStep()
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ScreeningRunMetric) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ScreeningRunMetric) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ScreeningRunMetric) predicate.ScreeningRunMetric {
	return predicate.ScreeningRunMetric(sql.NotPredicates(p))
}
