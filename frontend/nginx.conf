# Nginx 配置文件 for React SPA

# 注意：在容器中以非 root 用户运行时，不需要 user 指令

# 工作进程数，通常设置为 CPU 核心数
worker_processes auto;

# 错误日志路径和级别
error_log /var/log/nginx/error.log warn;

# PID 文件路径
pid /var/run/nginx.pid;

# 事件模块配置
events {
    # 每个工作进程的最大连接数
    worker_connections 1024;
    
    # 使用 epoll 事件模型（Linux 下性能最好）
    use epoll;
    
    # 允许一个工作进程同时接受多个新连接
    multi_accept on;
}

# HTTP 模块配置
http {
    # 包含 MIME 类型定义
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式定义
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    # 访问日志路径
    access_log /var/log/nginx/access.log main;

    # 性能优化配置
    sendfile on;                    # 启用高效文件传输
    tcp_nopush on;                  # 优化数据包传输
    tcp_nodelay on;                 # 禁用 Nagle 算法
    keepalive_timeout 65;           # 保持连接超时时间
    types_hash_max_size 2048;       # 类型哈希表最大大小

    # Gzip 压缩配置
    gzip on;                        # 启用 gzip 压缩
    gzip_vary on;                   # 启用 Vary: Accept-Encoding 响应头
    gzip_min_length 1024;           # 最小压缩文件大小
    gzip_proxied any;               # 对所有代理请求启用压缩
    gzip_comp_level 6;              # 压缩级别 (1-9)
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # 安全头配置
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;

    # 服务器配置
    server {
        # 监听端口
        listen 80;
        listen [::]:80;
        
        # 服务器名称
        server_name localhost;

        # 网站根目录
        root /usr/share/nginx/html;
        
        # 默认首页文件
        index index.html index.htm;

        # 字符集
        charset utf-8;

        # 主要位置配置 - 处理 React Router
        location / {
            # 尝试按顺序提供文件，如果都不存在则回退到 index.html
            # 这对于 React Router 的客户端路由至关重要
            try_files $uri $uri/ /index.html;
            
            # 缓存控制 - HTML 文件不缓存
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # 静态资源缓存配置
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            # 静态资源长期缓存
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # 启用 gzip 压缩
            gzip_static on;
        }

         #API 代理配置（如果需要）
        #注释掉以避免在单独的前端容器中出现后端依赖错误
        location /api/ {
            # 代理到后端服务
            proxy_pass http://backend:8888;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # 超时配置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # 健康检查端点
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # 禁止访问隐藏文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 禁止访问备份文件
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }

        # 错误页面配置
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}
